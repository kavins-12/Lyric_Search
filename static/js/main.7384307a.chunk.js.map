{"version":3,"sources":["components/layout/spinner.gif","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","components/layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","config","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","src","spinner","alt","style","width","margin","display","Track","track","className","artist_name","track_name","album_name","to","track_id","Tracks","undefined","length","Spinner","Fragment","map","item","key","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","album_id","explicit","track_rating","format","updated_time","Navbar","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7384307a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9463db66.gif\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\n\r\n\r\nconst Context=React.createContext();\r\n\r\nconst reducer = (state , action) =>{\r\n    switch(action.type){\r\n        case 'SEARCH_TRACKS' :\r\n            return{\r\n                ...state,\r\n                track_list : action.payload,\r\n                heading : 'search Results'\r\n            };\r\n            default :\r\n              return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n   \r\n    state={\r\n        track_list :[ ],\r\n        heading: 'Top 10 Tracks',\r\n        dispatch : action => this.setState(state => reducer (state,action))\r\n\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            \r\n            this.setState({\r\n                track_list: res.data.message.body.track_list\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer =Context.Consumer;","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () =>{\r\n    return(\r\n        <div>\r\n            <img\r\n            src={spinner}\r\n            alt=\"Loading...\"\r\n            style={{ width: '200px', margin: '40px auto', display: 'block'}}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n const Track = (props) =>{\r\n     const {track} = props;\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h5>{track.artist_name}</h5>\r\n                    <p className=\"card-text\">\r\n                        <strong><i className=\"fas fa-play\"></i> Track</strong>:{track.track_name}\r\n                        <br/>\r\n                        <strong><i className=\"fas fa-compact-disc\"></i> Album</strong>:{track.album_name}\r\n                    </p>\r\n                    <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n                        <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from '../tracks/Track'\r\n\r\n class Tracks extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const { track_list, heading } = value;\r\n                    if(track_list === undefined || track_list.length === 0){\r\n                        return <Spinner/>\r\n                    } else{\r\n                        return (\r\n                            <React.Fragment> \r\n                                <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                                <div className=\"row\">\r\n                                    {track_list.map(item => (\r\n                                        <Track key={item.track.track_id} track={item.track}/>\r\n                                    ))}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        );\r\n                    }\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tracks;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../context';\r\nrequire('dotenv').config();\r\n\r\n\r\n class Search extends Component {\r\n     state = {\r\n         trackTitle : ''\r\n     }\r\n\r\n     findTrack=(dispatch,e)=>{\r\n        e.preventDefault();\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?g_track=${this.state.trackTitle}&page_size=10&page=1&s_track-rating=desc&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: 'SEARCH_TRACKS',\r\n                    payload: res.data.message.body.track_list\r\n                });\r\n                this.setState({trackTitle:''})\r\n            })\r\n            .catch(err => console.log(err));\r\n     }\r\n\r\n     onChange =(e) =>{\r\n        this.setState({[e.target.name] : e.target.value});\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch}= value;\r\n                    return(\r\n                    <div className=\"card card-body mb-4 p-4\">\r\n                        <h1 className=\"display-4 text-center\">\r\n                        <i className=\"fas fa-music\"/> search for a song\r\n                        </h1>\r\n                        <p className=\"lead text-center\">Get the lyrics for any song</p>\r\n                        <form onSubmit={this.findTrack.bind(this,dispatch)}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                  type=\"text\"\r\n                                  className=\"form-control form-control-lg\"\r\n                                  placeholder=\"Song title...\"\r\n                                  name=\"trackTitle\"\r\n                                  value={this.state.trackTitle}\r\n                                  onChange={this.onChange}\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track lyrics</button>\r\n                        </form>\r\n                    </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\nconst Index = ()=> {\r\n    return (\r\n        <React.Fragment>\r\n            <Search />\r\n            <Tracks />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nrequire('dotenv').config();\r\n\r\n class Lyrics extends Component {\r\n     state={\r\n         track:{},\r\n         lyrics:{}\r\n     };\r\n\r\ncomponentDidMount(){\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n    \r\n    .then(res => {\r\n        \r\n         this.setState({lyrics: res.data.message.body.lyrics });\r\n          return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n            .then(res => {\r\n            \r\n                this.setState({ track : res.data.message.body.track});\r\n            })\r\n            .catch(err => console.log(err));\r\n        })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n    render() {\r\n        const {track,lyrics} = this.state;\r\n        if(track === undefined || lyrics=== undefined || Object.keys(track).length===0 ||Object.keys(lyrics).length===0){\r\n            return <Spinner />\r\n        }\r\n        else {\r\n           return(\r\n            <React.Fragment>\r\n                <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header\">\r\n                        {track.track_name} by {' '}\r\n                         <span className=\"text-secondary\">{track.artist_name}</span>\r\n                    </h5>\r\n                    <div className=\"card-body\">\r\n                     <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"list-group mt-3 \">\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Album ID</strong> : {track.album_id}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Explicit Words </strong>: {track.explicit === 0 ?'no' : 'yes'} \r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Track Ratings</strong> : {' '}{track.track_rating }\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Release date </strong>: <Moment format=\"MM/DD/YYYY\">{track.updated_time}</Moment>\r\n                    </li>\r\n                </ul>\r\n            </React.Fragment>\r\n           );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lyrics;","import React from 'react'\r\n\r\nconst Navbar= () =>{\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark mb-5 \">\r\n            <span className=\"navbar-brand h1 mb-0 mx-auto\"> Lyric finder</span>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport { BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport { Provider } from './context';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Index}/>\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics}/>\n            </Switch>\n          </div>\n        </React.Fragment>\n     </Router>\n   </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}